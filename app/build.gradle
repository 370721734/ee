apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.aspectj:aspectjtools:1.8.8'
        classpath 'org.aspectj:aspectjweaver:1.8.8'
    }
}


android {
    compileSdkVersion 27
    buildToolsVersion "27.0.2"


    // Butterknife requires Java 8.
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

//    dexOptions {
//        javaMaxHeapSize "4g"
//    }


    defaultConfig {
        applicationId "com.jarhero790.eub"
        minSdkVersion 24
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        ndk {
            //abiFilters "armeabi", "armeabi-v7a"
            // 如果您使用的是商业版，只能使用 armeabi 架构，即：
            abiFilters "armeabi"
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // 导入腾讯短视频SDK aar，LiteAVSDK_UGC_x.x.xxxx 请自行修改为最新版本号
    implementation(name: 'LiteAVSDK_UGC_6.5.7272', ext: 'aar')
    implementation 'com.android.support:appcompat-v7:27.+'
    implementation 'com.android.support:cardview-v7:27.+'
    implementation 'com.android.support:design:27.+'
//    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:recyclerview-v7:27+'
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.2.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.2.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    implementation 'com.squareup.okhttp3:okhttp:3.4.1'
    // RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.0.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'org.reactivestreams:reactive-streams:1.0.2'
    implementation 'com.orhanobut:logger:1.15'
    implementation 'me.yokeyword:fragmentation:1.3.7'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.46'


    // 必选，内部默认使用系统mediaplayer进行解码
    implementation 'com.github.dueeeke.dkplayer:dkplayer-java:3.0.2'
    // 可选，包含StandardVideoController的实现
    implementation 'com.github.dueeeke.dkplayer:dkplayer-ui:3.0.2'
    //可选，使用exoplayer进行解码
    implementation 'com.github.dueeeke.dkplayer:player-exo:3.0.2'
    // 可选，使用ijkplayer进行解码
    implementation 'com.github.dueeeke.dkplayer:player-ijk:3.0.2'
    implementation 'com.github.dueeeke.dkplayer:ijk-armv7a:3.0.2'
    implementation 'com.github.dueeeke.dkplayer:ijk-armv5:3.0.2'
    implementation 'com.github.dueeeke.dkplayer:ijk-arm64:3.0.2'
    implementation 'com.github.dueeeke.dkplayer:ijk-x86:3.0.2'
    implementation 'com.github.dueeeke.dkplayer:ijk-x86_64:3.0.2'
//    implementation 'com.github.bumptech.glide:glide:4.9.0'

    // implementation 'com.shuyu:GSYVideoPlayer:6.0.3'

    implementation 'com.facebook.fresco:fresco:1.10.0'
    implementation 'com.facebook.fresco:imagepipeline-okhttp3:1.10.0'


    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
//    implementation files('libs/aspectjrt.jar')
    implementation 'org.greenrobot:eventbus:3.1.1'
    //点赞心形
    implementation 'com.sackcentury:shinebutton:0.2.0'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    //implementation 'de.hdodenhof:circleimageview:3.0.0'
    //permissions
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'
//    implementation files('libs/aspectjrt.jar')

    /**
     * 融云sdk
     */
    implementation 'cn.rongcloud.sdk:im_kit:2.9.18'
    //im_kit必须依赖im_lib，所以需要加入对应依赖
    implementation 'cn.rongcloud.sdk:im_lib:2.9.18'
    implementation 'com.alibaba:fastjson:1.1.71.android'

    //
    implementation 'com.uber.autodispose:autodispose-android-archcomponents:0.8.0'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.5.1'
    implementation 'com.contrarywind:Android-PickerView:4.1.8'
    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.2.3'
//    compile 'com.jph.takephoto:takephoto_library:4.1.0'
    //
}


//import org.aspectj.bridge.IMessage
//import org.aspectj.bridge.MessageHandler
//import org.aspectj.tools.ajc.Main

//获取log打印工具和构建配置
//final def log = project.logger
//final def variants = project.android.applicationVariants

//variants.all { variant ->
//    if (!variant.buildType.isDebuggable()) {
//        //判断是否debug，如果打release把return去掉就可以
//        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
//        //  return;
//    }
//    //使aspectj配置生效
//    JavaCompile javaCompile = variant.javaCompile
//    javaCompile.doLast {
//        String[] args = ["-showWeaveInfo",
//                         "-1.8",
//                         "-inpath", javaCompile.destinationDir.toString(),
//                         "-aspectpath", javaCompile.classpath.asPath,
//                         "-d", javaCompile.destinationDir.toString(),
//                         "-classpath", javaCompile.classpath.asPath,
//                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
//        log.debug "ajc args: " + Arrays.toString(args)
//
//        MessageHandler handler = new MessageHandler(true);
//        new Main().run(args, handler);
//        //为了在编译时打印信息如警告、error等等
//        for (IMessage message : handler.getMessages(null, true)) {
//            switch (message.getKind()) {
//                case IMessage.ABORT:
//                case IMessage.ERROR:
//                case IMessage.FAIL:
//                    log.error message.message, message.thrown
//                    break;
//                case IMessage.WARNING:
//                    log.warn message.message, message.thrown
//                    break;
//                case IMessage.INFO:
//                    log.info message.message, message.thrown
//                    break;
//                case IMessage.DEBUG:
//                    log.debug message.message, message.thrown
//                    break;
//            }
//        }
//    }
//}
